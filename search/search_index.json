{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Autotorrent2 Autotorrent2 is the successor to Autotorrent. The original autotorrent was made to match data on disk with data in torrents even when slight differences or alterations occured. Autotorrent2 can do that too. The purpose of Autotorrent2 is to extend to the whole pipeline of a torrent lifecycle from discovery to removal. Actions that often are cumbersome and timeconsuming to do by hand. Feature comparison Feature Autotorrent Autotorrent2 Torrent to data match Yes Yes Torrent removal No Yes Handle read-only files being written to No Yes Discover how much is seeded in a folder No Yes Handle broken encoding (utf-8) No Yes Multi-client support Partial Yes Different torrent clients support Yes Yes (Conditional) hash verification No Yes Torrent discovery No On TODO Installation Check out the Github README. Links Github","title":"Home"},{"location":"#autotorrent2","text":"Autotorrent2 is the successor to Autotorrent. The original autotorrent was made to match data on disk with data in torrents even when slight differences or alterations occured. Autotorrent2 can do that too. The purpose of Autotorrent2 is to extend to the whole pipeline of a torrent lifecycle from discovery to removal. Actions that often are cumbersome and timeconsuming to do by hand.","title":"Autotorrent2"},{"location":"#feature-comparison","text":"Feature Autotorrent Autotorrent2 Torrent to data match Yes Yes Torrent removal No Yes Handle read-only files being written to No Yes Discover how much is seeded in a folder No Yes Handle broken encoding (utf-8) No Yes Multi-client support Partial Yes Different torrent clients support Yes Yes (Conditional) hash verification No Yes Torrent discovery No On TODO","title":"Feature comparison"},{"location":"#installation","text":"Check out the Github README.","title":"Installation"},{"location":"#links","text":"Github","title":"Links"},{"location":"cli/","text":"CLI Reference This page provides documentation for the commandline. at2 Usage: at2 [OPTIONS] COMMAND [ARGS]... Options: -c, --config FILE Path to config file -v, --verbose Verbose logging -u, --utf8-compat-mode Try work around utf-8 errors, not recommended --version Show the version and exit. --help Show this message and exit. at2 add Add new torrents to a client. Usage: at2 add [OPTIONS] CLIENT [TORRENT]... Options: -e, --exact Exact matching mode. Can also be considered a \"reseed\" mode. Disables all other modes. -s, --hash-probe Probe matched files for full pieces to ensure the data matches. -a, --hash-size Hash size matching mode, checks for files with same size but different filenames. --print-summary Print a summary of all actions when done. --chown TEXT Chown the data folder when creating links. --dry-run Do not actually create links and add the torrents, just check what would happen. --move-torrent-on-add PATH Move the torrent to this path after it has been added successfully to the client. --stopped Add the torrent in stopped state. -t, --store-path-template TEXT Pass a custom template instead of using the one defined in the config file. -v, --store-path-variable TEXT Variable used for store path using a key=value syntax. --help Show this message and exit. at2 check-config Checks if the config file exists and is loadable. Usage: at2 check-config [OPTIONS] Options: --help Show this message and exit. at2 cleanup-cache Cleanup RW cache for expired items. Usage: at2 cleanup-cache [OPTIONS] Options: --help Show this message and exit. at2 find-unseeded Find unseeded paths. Usage: at2 find-unseeded [OPTIONS] [PATH]... Options: -e, --escape-paths Escape the output paths --help Show this message and exit. at2 ls See what is seeded for a given path. Usage: at2 ls [OPTIONS] [PATH]... Options: -s, --summary End the listing with a summary -d, --depth INTEGER --help Show this message and exit. at2 rm Remove all torrents seeding data from a path. Does not delete the actual data. Usage: at2 rm [OPTIONS] PATH... Options: -l, --client TEXT Remove from a specific client --help Show this message and exit. at2 scan Scan your local paths files. Usage: at2 scan [OPTIONS] Options: -p, --path PATH Partial scan a given path, does not remove removed files from the database. --help Show this message and exit. at2 scan-clients Scan your clients for files. Usage: at2 scan-clients [OPTIONS] Options: -l, --client TEXT Scan a specific client -f, --full Clear old data and do a full scan -a, --fast Run a fast scan, does not detect moved torrents. Overwritten by full --help Show this message and exit. at2 test-connection Test your connection to your clients. Usage: at2 test-connection [OPTIONS] Options: -l, --client TEXT Check a specific client --help Show this message and exit.","title":"CLI Reference"},{"location":"cli/#cli-reference","text":"This page provides documentation for the commandline.","title":"CLI Reference"},{"location":"cli/#at2","text":"Usage: at2 [OPTIONS] COMMAND [ARGS]... Options: -c, --config FILE Path to config file -v, --verbose Verbose logging -u, --utf8-compat-mode Try work around utf-8 errors, not recommended --version Show the version and exit. --help Show this message and exit.","title":"at2"},{"location":"cli/#at2-add","text":"Add new torrents to a client. Usage: at2 add [OPTIONS] CLIENT [TORRENT]... Options: -e, --exact Exact matching mode. Can also be considered a \"reseed\" mode. Disables all other modes. -s, --hash-probe Probe matched files for full pieces to ensure the data matches. -a, --hash-size Hash size matching mode, checks for files with same size but different filenames. --print-summary Print a summary of all actions when done. --chown TEXT Chown the data folder when creating links. --dry-run Do not actually create links and add the torrents, just check what would happen. --move-torrent-on-add PATH Move the torrent to this path after it has been added successfully to the client. --stopped Add the torrent in stopped state. -t, --store-path-template TEXT Pass a custom template instead of using the one defined in the config file. -v, --store-path-variable TEXT Variable used for store path using a key=value syntax. --help Show this message and exit.","title":"add"},{"location":"cli/#at2-check-config","text":"Checks if the config file exists and is loadable. Usage: at2 check-config [OPTIONS] Options: --help Show this message and exit.","title":"check-config"},{"location":"cli/#at2-cleanup-cache","text":"Cleanup RW cache for expired items. Usage: at2 cleanup-cache [OPTIONS] Options: --help Show this message and exit.","title":"cleanup-cache"},{"location":"cli/#at2-find-unseeded","text":"Find unseeded paths. Usage: at2 find-unseeded [OPTIONS] [PATH]... Options: -e, --escape-paths Escape the output paths --help Show this message and exit.","title":"find-unseeded"},{"location":"cli/#at2-ls","text":"See what is seeded for a given path. Usage: at2 ls [OPTIONS] [PATH]... Options: -s, --summary End the listing with a summary -d, --depth INTEGER --help Show this message and exit.","title":"ls"},{"location":"cli/#at2-rm","text":"Remove all torrents seeding data from a path. Does not delete the actual data. Usage: at2 rm [OPTIONS] PATH... Options: -l, --client TEXT Remove from a specific client --help Show this message and exit.","title":"rm"},{"location":"cli/#at2-scan","text":"Scan your local paths files. Usage: at2 scan [OPTIONS] Options: -p, --path PATH Partial scan a given path, does not remove removed files from the database. --help Show this message and exit.","title":"scan"},{"location":"cli/#at2-scan-clients","text":"Scan your clients for files. Usage: at2 scan-clients [OPTIONS] Options: -l, --client TEXT Scan a specific client -f, --full Clear old data and do a full scan -a, --fast Run a fast scan, does not detect moved torrents. Overwritten by full --help Show this message and exit.","title":"scan-clients"},{"location":"cli/#at2-test-connection","text":"Test your connection to your clients. Usage: at2 test-connection [OPTIONS] Options: -l, --client TEXT Check a specific client --help Show this message and exit.","title":"test-connection"},{"location":"usage/","text":"Usage A number of common use-cases and how to handle them are described here. For the exhaustive feature list check out the CLI. Torrent add Commands: at2 add at2 scan at2 cleanup-cache Config fields: link_type always_verify_hash paths same_paths add_limit_size add_limit_percent store_path cache_touched_files rw_file_cache_ttl rw_file_cache_path Match torrents with data on your disk, where every torrent starts its life. First we have to at2 scan to discover files Autotorrent2 can match against. Our ubuntu isos are now indexed and we can add them to a torrent client. The client we are using is called transmission-ubuntu. at2 add transmission-ubuntu ubuntu-20.04.torrent - it turns out the torrent is a little bit different as it has an .nfo file and transmission will need to write part of a piece to ubuntu-20.04.iso. The file is read-only because it is owned by a different user and therefore it is cached locally. It can be pointed back to the original file AFTER transmission is done writing to the cached file. Autotorrent2 supports caching files which can be enabled and disabled with the cache_touched_files setting. The time is now rw_file_cache_ttl seconds later and we want to cleanup the cache, i.e. re-link files with the original file instead of having multiple copies of the same file indefinitely. Run at2 cleanup-cache and the file is gone from the cache. Torrent reseed Commands: at2 add at2 scan Config fields: always_verify_hash paths same_paths New computer, new seedbox, new something. You want to reseed the old torrents and you have all the torrents and all the data available. Edit paths to the correct paths, run at2 scan to index your data. With the data indexed you are ready to add the torrents with at2 add -e *.torrent - the -e option is the exact match mode, aka. reseed mode. Find seeded and unseeded files Commands: at2 ls at2 find-unseeded at2 scan-clients For one reason or another, you have removed torrents from your client but not deleted the files on disk. This can be for multiple reasons, e.g. the files might be in use for cross-seeding purposes. First we scan the clients with at2 scan-clients so we have a local index of all the seeded files. It takes the filelist from the clients and saves it. Now we can do at2 ls to see what is seeded in the current folder. While it is interesting to see how much is seeded the practical purpose is to find the exact files not seeded. This can be done with at2 find-unseeded /mnt/data/torrent-data/ which will spit out the paths not seeded. A common trick is to do is use -e option and rm like: at2 find-unseeded -e /mnt/data/torrent-data/ | xargs rm -r -- WARNING: make sure the clients are recently scanned and the output without the rm part looks correct as this command just deletes files. Torrent removal Commands: at2 rm at2 scan-clients The normal process for removing data is to do it from the torrent client, these commands can help you do it the other way and remove from multiple clients at once. Like with ls we need to at2 scan-clients first to have an up-to-date local list of seeded files. Run at2 rm /path/to/torrent to remove everything seeded in that path directly or indirectly, i.e. linked files too. No torrents left hanging. Test configuration Commands: at2 check-config at2 test-connection Sometimes you want to check if what you are doing is correct and working. The two commands list can test this easily. Torrent discovery Command: TODO This feature is not implemented yet but you can look at some of the other tools while you wait. With the original autotorrent you would have to go out and find the potential torrents you would want to seed. This works for some flows but people just want stuff found and seeded. There has been a huge resurgance in this exact field with tools like mmgoodnow/cross-seed , BC44/Cross-Seed-AutoDL , boban-bmw/cross-seedarr , ccf-2012/seedcross and (my own) JohnDoee/flexget-cross-seed . The listed tools have an air of impreciseness around them, if files cannot be easily discovered via external search tools.","title":"Usage"},{"location":"usage/#usage","text":"A number of common use-cases and how to handle them are described here. For the exhaustive feature list check out the CLI.","title":"Usage"},{"location":"usage/#torrent-add","text":"","title":"Torrent add"},{"location":"usage/#commands","text":"at2 add at2 scan at2 cleanup-cache","title":"Commands:"},{"location":"usage/#config-fields","text":"link_type always_verify_hash paths same_paths add_limit_size add_limit_percent store_path cache_touched_files rw_file_cache_ttl rw_file_cache_path Match torrents with data on your disk, where every torrent starts its life. First we have to at2 scan to discover files Autotorrent2 can match against. Our ubuntu isos are now indexed and we can add them to a torrent client. The client we are using is called transmission-ubuntu. at2 add transmission-ubuntu ubuntu-20.04.torrent - it turns out the torrent is a little bit different as it has an .nfo file and transmission will need to write part of a piece to ubuntu-20.04.iso. The file is read-only because it is owned by a different user and therefore it is cached locally. It can be pointed back to the original file AFTER transmission is done writing to the cached file. Autotorrent2 supports caching files which can be enabled and disabled with the cache_touched_files setting. The time is now rw_file_cache_ttl seconds later and we want to cleanup the cache, i.e. re-link files with the original file instead of having multiple copies of the same file indefinitely. Run at2 cleanup-cache and the file is gone from the cache.","title":"Config fields:"},{"location":"usage/#torrent-reseed","text":"","title":"Torrent reseed"},{"location":"usage/#commands_1","text":"at2 add at2 scan","title":"Commands:"},{"location":"usage/#config-fields_1","text":"always_verify_hash paths same_paths New computer, new seedbox, new something. You want to reseed the old torrents and you have all the torrents and all the data available. Edit paths to the correct paths, run at2 scan to index your data. With the data indexed you are ready to add the torrents with at2 add -e *.torrent - the -e option is the exact match mode, aka. reseed mode.","title":"Config fields:"},{"location":"usage/#find-seeded-and-unseeded-files","text":"","title":"Find seeded and unseeded files"},{"location":"usage/#commands_2","text":"at2 ls at2 find-unseeded at2 scan-clients For one reason or another, you have removed torrents from your client but not deleted the files on disk. This can be for multiple reasons, e.g. the files might be in use for cross-seeding purposes. First we scan the clients with at2 scan-clients so we have a local index of all the seeded files. It takes the filelist from the clients and saves it. Now we can do at2 ls to see what is seeded in the current folder. While it is interesting to see how much is seeded the practical purpose is to find the exact files not seeded. This can be done with at2 find-unseeded /mnt/data/torrent-data/ which will spit out the paths not seeded. A common trick is to do is use -e option and rm like: at2 find-unseeded -e /mnt/data/torrent-data/ | xargs rm -r -- WARNING: make sure the clients are recently scanned and the output without the rm part looks correct as this command just deletes files.","title":"Commands:"},{"location":"usage/#torrent-removal","text":"","title":"Torrent removal"},{"location":"usage/#commands_3","text":"at2 rm at2 scan-clients The normal process for removing data is to do it from the torrent client, these commands can help you do it the other way and remove from multiple clients at once. Like with ls we need to at2 scan-clients first to have an up-to-date local list of seeded files. Run at2 rm /path/to/torrent to remove everything seeded in that path directly or indirectly, i.e. linked files too. No torrents left hanging.","title":"Commands:"},{"location":"usage/#test-configuration","text":"","title":"Test configuration"},{"location":"usage/#commands_4","text":"at2 check-config at2 test-connection Sometimes you want to check if what you are doing is correct and working. The two commands list can test this easily.","title":"Commands:"},{"location":"usage/#torrent-discovery","text":"Command: TODO This feature is not implemented yet but you can look at some of the other tools while you wait. With the original autotorrent you would have to go out and find the potential torrents you would want to seed. This works for some flows but people just want stuff found and seeded. There has been a huge resurgance in this exact field with tools like mmgoodnow/cross-seed , BC44/Cross-Seed-AutoDL , boban-bmw/cross-seedarr , ccf-2012/seedcross and (my own) JohnDoee/flexget-cross-seed . The listed tools have an air of impreciseness around them, if files cannot be easily discovered via external search tools.","title":"Torrent discovery"}]}